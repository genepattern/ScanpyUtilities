[
{"name": "Input and Output", 
  "parameters": ["data.file", "output.basename", "genome"]}, 
{"name": "Annotation", "hidden": true, 
  "description":"Add count information to the data file. This will generate a new h5ad file that adds the number of counts expressed in each gene and cell as well as the total number of cells expresssed in each gene and vice versa.  For cells the new annotations are called  n_counts, log_counts, n_genes and for genes the new annotations are called n_counts, n_cells.",
  "parameters": ["annotate"]},
{"name": "Cell Filtering", "hidden": true,        
   "description":"Filter out cells based on the following thresholds.", 
  "parameters": ["cells.min.counts", "cells.max.counts",  "cells.min.genes", "cells.max.genes"]},
{"name": "Gene Filtering", "hidden": true,       
  "description":"Filter out genes based on the following thresholds.", 
  "parameters": ["genes.min.counts", "genes.max.counts",  "genes.min.cells", "genes.max.cells"]},
{"name": "Cell Type Identification", "hidden": true,
  "description":"Run the cell type identification pipeline provided in the R package garnett. This pipeline expects a non-normalized count matrix along with a cell type marker file. It trains a classifier based on the the marker genes provided and adds a cell type annotation to each cell in the data set based on this classifier. The module will extract the count matrix from the h5ad data file and create a new h5ad file with the added annotations. For more information see https://cole-trapnell-lab.github.io/garnett/docs/.",
  "parameters": ["cell.type.marker.file", "gene.annotation.database"]},
{"name": "Normalization", "hidden": true,        
  "description":"Run the single-cell normalization pipeline provided in the R package scran. This pipeline expects a count matrix along with a cluster index for each cell. The clustering is done as a prior step, in this case using the Louvain clustering algorithm implemented in scanpy. Then the data is divided by the size factors computed from scran for each cell. Finally, a log transformation is applied to the data to give the final normalized output. This is stored in a new h5ad file.",
  "parameters": ["normalize"]},
{"name": "High Variance Genes", "hidden": true,
  "description":"Filter and subset the data to retain only the N most variable genes.",
  "parameters": ["n.high.variance.genes"]},
{"name": "Dimension Reduction", "hidden": true,
  "description":"Compute UMAP or TSNE coordinates for visualization.",
  "parameters": ["compute.umap", "compute.tsne"]}
]
